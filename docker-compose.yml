version: "3.7"
services:
  ui:
    image: nerd/ui:latest
    build:
      context: ./ui
    restart: on-failure
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
    ports:
      - "${NERD_WEB_HTTP_PORT}:${NERD_WEB_HTTP_PORT}"
  mongodb:
    image: bitnami/mongodb:4.0
    restart: on-failure
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
    volumes:
      - mongodb-data:/bitnami
  rabbitmq:
    image: bitnami/rabbitmq:3.7
    restart: on-failure
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
  app: &app
    image: nerd/app:latest
    build:
      context: ./app
      args:
        NERD_SPACY_MODEL: "${NERD_SPACY_MODEL}"
    restart: on-failure
    init: true
    stdin_open: true
    tty: true
    env_file:
      - .env
    volumes:
      - models-dir:/app/models
    depends_on:
      - mongodb
      - rabbitmq
    command: ["web"]
  worker:
    <<: *app
    depends_on:
      - app
    command: ["worker", "vCURRENT"]
  flower:
    <<: *app
    depends_on:
      - app
    command: ["flower"]
volumes:
  mongodb-data:
    external: true # external to avoid deletion on docker-compose down
  # Models dir to share models between app & workers
  models-dir:
    external: true # external to avoid deletion on docker-compose down
